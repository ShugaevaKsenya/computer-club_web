{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ksenia\\\\Desktop\\\\\\u043A\\u043E\\u043C\\u043F_\\u043A\\u043B\\u0443\\u0431\\\\gaming-club-react\\\\src\\\\components\\\\Rooms.js\",\n  _s = $RefreshSig$();\n// src/components/Rooms.js\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { apiService } from '../services/Api';\nimport '../styles/Rooms.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Rooms = () => {\n  _s();\n  const {\n    clubAddress\n  } = useParams();\n  const navigate = useNavigate();\n  const [rooms, setRooms] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [clubId, setClubId] = useState(null);\n  useEffect(() => {\n    const loadRooms = async () => {\n      try {\n        const clubs = await apiService.getClubs();\n        const club = clubs.find(c => c.address === clubAddress);\n        if (!club) {\n          navigate('/clubs');\n          return;\n        }\n        setClubId(club.id);\n\n        // Получаем позиции, чтобы определить комнаты\n        const positions = await apiService.getComputerPositions();\n        const clubPositions = positions.filter(p => p.club_id == club.id);\n\n        // Группируем по комнатам и считаем количество мест\n        const roomMap = {};\n        clubPositions.forEach(pos => {\n          if (!roomMap[pos.room]) {\n            roomMap[pos.room] = 0;\n          }\n          roomMap[pos.room]++;\n        });\n        const roomList = Object.entries(roomMap).map(([name, count]) => ({\n          name,\n          capacity: count\n        }));\n        setRooms(roomList);\n      } catch (error) {\n        console.error('Ошибка загрузки комнат:', error);\n        navigate('/clubs');\n      } finally {\n        setLoading(false);\n      }\n    };\n    loadRooms();\n  }, [clubAddress, navigate]);\n  const handleRoomSelect = roomName => {\n    localStorage.setItem('selectedClubAddress', clubAddress);\n    localStorage.setItem('selectedRoom', roomName);\n    navigate(`/booking`);\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"rooms-section\",\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u043A\\u0430 \\u043A\\u043E\\u043C\\u043D\\u0430\\u0442...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 43\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"rooms-section\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"section-title\",\n        children: [\"\\u0412\\u044B\\u0431\\u0435\\u0440\\u0438\\u0442\\u0435 \\u0437\\u0430\\u043B \\u0432 \\u043A\\u043B\\u0443\\u0431\\u0435 \", clubAddress]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"rooms-grid\",\n        children: rooms.map((room, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"room-card\",\n          onClick: () => handleRoomSelect(room.name),\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: room.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"\\u0412\\u043C\\u0435\\u0441\\u0442\\u0438\\u043C\\u043E\\u0441\\u0442\\u044C: \", room.capacity, \" \\u043C\\u0435\\u0441\\u0442\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn secondary\",\n        onClick: () => navigate('/clubs'),\n        children: \"\\u2190 \\u041D\\u0430\\u0437\\u0430\\u0434 \\u043A \\u0432\\u044B\\u0431\\u043E\\u0440\\u0443 \\u043A\\u043B\\u0443\\u0431\\u0430\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n};\n_s(Rooms, \"XOoEK6TDew0bKn1mjEoN3ahGvdI=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = Rooms;\nexport default Rooms;\nvar _c;\n$RefreshReg$(_c, \"Rooms\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","useParams","apiService","jsxDEV","_jsxDEV","Rooms","_s","clubAddress","navigate","rooms","setRooms","loading","setLoading","clubId","setClubId","loadRooms","clubs","getClubs","club","find","c","address","id","positions","getComputerPositions","clubPositions","filter","p","club_id","roomMap","forEach","pos","room","roomList","Object","entries","map","name","count","capacity","error","console","handleRoomSelect","roomName","localStorage","setItem","className","children","fileName","_jsxFileName","lineNumber","columnNumber","index","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Ksenia/Desktop/комп_клуб/gaming-club-react/src/components/Rooms.js"],"sourcesContent":["// src/components/Rooms.js\r\nimport React, { useState, useEffect } from 'react';\r\nimport { useNavigate, useParams } from 'react-router-dom';\r\nimport { apiService } from '../services/Api';\r\nimport '../styles/Rooms.css';\r\n\r\nconst Rooms = () => {\r\n  const { clubAddress } = useParams();\r\n  const navigate = useNavigate();\r\n  const [rooms, setRooms] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [clubId, setClubId] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const loadRooms = async () => {\r\n      try {\r\n        const clubs = await apiService.getClubs();\r\n        const club = clubs.find(c => c.address === clubAddress);\r\n        if (!club) {\r\n          navigate('/clubs');\r\n          return;\r\n        }\r\n        setClubId(club.id);\r\n\r\n        // Получаем позиции, чтобы определить комнаты\r\n        const positions = await apiService.getComputerPositions();\r\n        const clubPositions = positions.filter(p => p.club_id == club.id);\r\n\r\n        // Группируем по комнатам и считаем количество мест\r\n        const roomMap = {};\r\n        clubPositions.forEach(pos => {\r\n          if (!roomMap[pos.room]) {\r\n            roomMap[pos.room] = 0;\r\n          }\r\n          roomMap[pos.room]++;\r\n        });\r\n\r\n        const roomList = Object.entries(roomMap).map(([name, count]) => ({\r\n          name,\r\n          capacity: count\r\n        }));\r\n\r\n        setRooms(roomList);\r\n      } catch (error) {\r\n        console.error('Ошибка загрузки комнат:', error);\r\n        navigate('/clubs');\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    loadRooms();\r\n  }, [clubAddress, navigate]);\r\n\r\n  const handleRoomSelect = (roomName) => {\r\n    localStorage.setItem('selectedClubAddress', clubAddress);\r\n    localStorage.setItem('selectedRoom', roomName);\r\n    navigate(`/booking`);\r\n  };\r\n\r\n  if (loading) {\r\n    return <div className=\"rooms-section\"><h2>Загрузка комнат...</h2></div>;\r\n  }\r\n\r\n  return (\r\n    <section className=\"rooms-section\">\r\n      <div className=\"container\">\r\n        <h2 className=\"section-title\">Выберите зал в клубе {clubAddress}</h2>\r\n        <div className=\"rooms-grid\">\r\n          {rooms.map((room, index) => (\r\n            <button\r\n              key={index}\r\n              className=\"room-card\"\r\n              onClick={() => handleRoomSelect(room.name)}\r\n            >\r\n              <h3>{room.name}</h3>\r\n              <p>Вместимость: {room.capacity} мест</p>\r\n            </button>\r\n          ))}\r\n        </div>\r\n        <button\r\n          className=\"btn secondary\"\r\n          onClick={() => navigate('/clubs')}\r\n        >\r\n          ← Назад к выбору клуба\r\n        </button>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Rooms;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}