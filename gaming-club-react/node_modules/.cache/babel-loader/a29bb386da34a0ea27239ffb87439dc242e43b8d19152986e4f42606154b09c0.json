{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ksenia\\\\Desktop\\\\\\u043A\\u043E\\u043C\\u043F_\\u043A\\u043B\\u0443\\u0431\\\\gaming-club-react\\\\src\\\\context\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\n// src/context/AuthContext.js\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const useAuth = () => {\n  _s();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  // Восстанавливаем сессию при загрузке\n  useEffect(() => {\n    const savedUser = localStorage.getItem('user');\n    if (savedUser) {\n      setUser(JSON.parse(savedUser));\n    }\n    setLoading(false);\n  }, []);\n  const login = (email, password) => {\n    // Админ: admin@example.com / пароль: admin123\n    if (email === 'admin@example.com' && password === 'admin123') {\n      const adminUser = {\n        email,\n        role: 'admin'\n      };\n      setUser(adminUser);\n      localStorage.setItem('user', JSON.stringify(adminUser));\n      return {\n        success: true,\n        role: 'admin'\n      };\n    }\n\n    // Обычный пользователь (можно расширить позже)\n    const regularUser = {\n      email,\n      role: 'user'\n    };\n    setUser(regularUser);\n    localStorage.setItem('user', JSON.stringify(regularUser));\n    return {\n      success: true,\n      role: 'user'\n    };\n  };\n  const logout = () => {\n    setUser(null);\n    localStorage.removeItem('user');\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user,\n      login,\n      logout,\n      loading\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n_s2(AuthProvider, \"NiO5z6JIqzX62LS5UWDgIqbZYyY=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","context","Error","AuthProvider","children","_s2","user","setUser","loading","setLoading","savedUser","localStorage","getItem","JSON","parse","login","email","password","adminUser","role","setItem","stringify","success","regularUser","logout","removeItem","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Ksenia/Desktop/комп_клуб/gaming-club-react/src/context/AuthContext.js"],"sourcesContent":["// src/context/AuthContext.js\r\nimport React, { createContext, useContext, useState, useEffect } from 'react';\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport const useAuth = () => {\r\n  const context = useContext(AuthContext);\r\n  if (!context) {\r\n    throw new Error('useAuth must be used within an AuthProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [user, setUser] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  // Восстанавливаем сессию при загрузке\r\n  useEffect(() => {\r\n    const savedUser = localStorage.getItem('user');\r\n    if (savedUser) {\r\n      setUser(JSON.parse(savedUser));\r\n    }\r\n    setLoading(false);\r\n  }, []);\r\n\r\n  const login = (email, password) => {\r\n    // Админ: admin@example.com / пароль: admin123\r\n    if (email === 'admin@example.com' && password === 'admin123') {\r\n      const adminUser = { email, role: 'admin' };\r\n      setUser(adminUser);\r\n      localStorage.setItem('user', JSON.stringify(adminUser));\r\n      return { success: true, role: 'admin' };\r\n    }\r\n\r\n    // Обычный пользователь (можно расширить позже)\r\n    const regularUser = { email, role: 'user' };\r\n    setUser(regularUser);\r\n    localStorage.setItem('user', JSON.stringify(regularUser));\r\n    return { success: true, role: 'user' };\r\n  };\r\n\r\n  const logout = () => {\r\n    setUser(null);\r\n    localStorage.removeItem('user');\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={{ user, login, logout, loading }}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};"],"mappings":";;;AAAA;AACA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9E,MAAMC,WAAW,gBAAGN,aAAa,CAAC,CAAC;AAEnC,OAAO,MAAMO,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAMC,OAAO,GAAGR,UAAU,CAACK,WAAW,CAAC;EACvC,IAAI,CAACG,OAAO,EAAE;IACZ,MAAM,IAAIC,KAAK,CAAC,6CAA6C,CAAC;EAChE;EACA,OAAOD,OAAO;AAChB,CAAC;AAACD,EAAA,CANWD,OAAO;AAQpB,OAAO,MAAMI,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,GAAA;EAC5C,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACc,OAAO,EAAEC,UAAU,CAAC,GAAGf,QAAQ,CAAC,IAAI,CAAC;;EAE5C;EACAC,SAAS,CAAC,MAAM;IACd,MAAMe,SAAS,GAAGC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC;IAC9C,IAAIF,SAAS,EAAE;MACbH,OAAO,CAACM,IAAI,CAACC,KAAK,CAACJ,SAAS,CAAC,CAAC;IAChC;IACAD,UAAU,CAAC,KAAK,CAAC;EACnB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMM,KAAK,GAAGA,CAACC,KAAK,EAAEC,QAAQ,KAAK;IACjC;IACA,IAAID,KAAK,KAAK,mBAAmB,IAAIC,QAAQ,KAAK,UAAU,EAAE;MAC5D,MAAMC,SAAS,GAAG;QAAEF,KAAK;QAAEG,IAAI,EAAE;MAAQ,CAAC;MAC1CZ,OAAO,CAACW,SAAS,CAAC;MAClBP,YAAY,CAACS,OAAO,CAAC,MAAM,EAAEP,IAAI,CAACQ,SAAS,CAACH,SAAS,CAAC,CAAC;MACvD,OAAO;QAAEI,OAAO,EAAE,IAAI;QAAEH,IAAI,EAAE;MAAQ,CAAC;IACzC;;IAEA;IACA,MAAMI,WAAW,GAAG;MAAEP,KAAK;MAAEG,IAAI,EAAE;IAAO,CAAC;IAC3CZ,OAAO,CAACgB,WAAW,CAAC;IACpBZ,YAAY,CAACS,OAAO,CAAC,MAAM,EAAEP,IAAI,CAACQ,SAAS,CAACE,WAAW,CAAC,CAAC;IACzD,OAAO;MAAED,OAAO,EAAE,IAAI;MAAEH,IAAI,EAAE;IAAO,CAAC;EACxC,CAAC;EAED,MAAMK,MAAM,GAAGA,CAAA,KAAM;IACnBjB,OAAO,CAAC,IAAI,CAAC;IACbI,YAAY,CAACc,UAAU,CAAC,MAAM,CAAC;EACjC,CAAC;EAED,oBACE5B,OAAA,CAACC,WAAW,CAAC4B,QAAQ;IAACC,KAAK,EAAE;MAAErB,IAAI;MAAES,KAAK;MAAES,MAAM;MAAEhB;IAAQ,CAAE;IAAAJ,QAAA,EAC3DA;EAAQ;IAAAwB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;AAAC1B,GAAA,CAvCWF,YAAY;AAAA6B,EAAA,GAAZ7B,YAAY;AAAA,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}